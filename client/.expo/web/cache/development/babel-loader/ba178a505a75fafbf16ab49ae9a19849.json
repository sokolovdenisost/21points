{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Offic\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\React-Native-BlackJack\\\\client\\\\src\\\\screens\\\\LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport { AppTextInput } from \"../components/ui/AppTextInput\";\nimport { AppButton } from \"../components/ui/AppButton\";\nimport { THEME } from \"../theme\";\nexport var LoginScreen = function LoginScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var loginHandler = function loginHandler() {\n    console.log('LOGIN');\n  };\n\n  var handleFocus = function handleFocus() {\n    LayoutAnimation.spring();\n    setInput(true);\n  };\n\n  var handleOnFocus = function handleOnFocus() {\n    LayoutAnimation.spring();\n    setInput(false);\n  };\n\n  var justifyContent = {\n    justifyContent: input ? 'flex-start' : 'center'\n  };\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.center), justifyContent),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, React.createElement(AppTextInput, {\n    title: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n    onEndEditing: handleOnFocus,\n    onFocus: handleFocus,\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), React.createElement(AppTextInput, {\n    title: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    onEndEditing: handleOnFocus,\n    onFocus: handleFocus,\n    style: {\n      marginBottom: 60\n    },\n    password: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), React.createElement(AppButton, {\n    title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n    onPress: loginHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), React.createElement(AppButton, {\n    style: styles.forgotPassword,\n    title: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  center: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: 'roboto-bold',\n    textAlign: 'center',\n    color: THEME.MAIN_COLOR\n  },\n  form: {\n    alignItems: 'center',\n    marginTop: 20\n  },\n  forgotPassword: {\n    backgroundColor: '#fff',\n    borderColor: '#fff',\n    borderWidth: 0,\n    fontSize: 16,\n    fontFamily: 'roboto-regular',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    color: THEME.MAIN_COLOR\n  }\n});","map":{"version":3,"sources":["C:/Users/Offic/OneDrive/Рабочий стол/React-Native-BlackJack/client/src/screens/LoginScreen.js"],"names":["React","useState","AppTextInput","AppButton","THEME","LoginScreen","input","setInput","loginHandler","console","log","handleFocus","LayoutAnimation","spring","handleOnFocus","justifyContent","Keyboard","dismiss","styles","center","form","marginBottom","forgotPassword","StyleSheet","create","container","flex","backgroundColor","title","fontSize","fontFamily","textAlign","color","MAIN_COLOR","alignItems","marginTop","borderColor","borderWidth","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    TouchableWithoutFeedback,\r\n    Keyboard,\r\n    LayoutAnimation,\r\n} from 'react-native';\r\n\r\nimport { AppTextInput } from '../components/ui/AppTextInput';\r\nimport { AppButton } from '../components/ui/AppButton';\r\nimport { THEME } from '../theme';\r\n\r\nexport const LoginScreen = () => {\r\n    const [input, setInput] = useState(false);\r\n\r\n    const loginHandler = () => {\r\n        console.log('LOGIN');\r\n    };\r\n\r\n    const handleFocus = () => {\r\n        LayoutAnimation.spring();\r\n        setInput(true);\r\n    };\r\n\r\n    const handleOnFocus = () => {\r\n        LayoutAnimation.spring();\r\n        setInput(false);\r\n    };\r\n\r\n    const justifyContent = {\r\n        justifyContent: input ? 'flex-start' : 'center',\r\n    };\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View style={{ ...styles.center, ...justifyContent }}>\r\n                <View style={styles.form}>\r\n                    <AppTextInput\r\n                        title=\"Логин\"\r\n                        onEndEditing={handleOnFocus}\r\n                        onFocus={handleFocus}\r\n                        style={{ marginBottom: 20 }}\r\n                    />\r\n                    <AppTextInput\r\n                        title=\"Пароль\"\r\n                        onEndEditing={handleOnFocus}\r\n                        onFocus={handleFocus}\r\n                        style={{ marginBottom: 60 }}\r\n                        password={true}\r\n                    />\r\n                    <AppButton title=\"Войти\" onPress={loginHandler} />\r\n                </View>\r\n                <AppButton style={styles.forgotPassword} title=\"Забыли пароль?\" />\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    center: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        fontFamily: 'roboto-bold',\r\n        textAlign: 'center',\r\n        color: THEME.MAIN_COLOR,\r\n    },\r\n    form: {\r\n        alignItems: 'center',\r\n        marginTop: 20,\r\n    },\r\n    forgotPassword: {\r\n        backgroundColor: '#fff',\r\n        borderColor: '#fff',\r\n        borderWidth: 0,\r\n        fontSize: 16,\r\n        fontFamily: 'roboto-regular',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        color: THEME.MAIN_COLOR,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}