{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Offic\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\blackjack\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AppNavigator } from \"./src/navigation/AppNavigation\";\nimport { MainScreen } from \"./src/screens/MainScreen\";\nimport { boostrap } from \"./src/boostrap\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAuth = _useState4[0],\n      setIsAuth = _useState4[1];\n\n  if (!isReady) {\n    return React.createElement(AppLoading, {\n      startAsync: boostrap,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: function onError(err) {\n        return console.log(err);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    });\n  }\n\n  if (isAuth) {\n    return;\n    React.createElement(AppNavigator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    });\n  }\n\n  return React.createElement(MainScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Offic/OneDrive/Рабочий стол/blackjack/App.js"],"names":["StatusBar","React","useState","AppLoading","AppNavigator","MainScreen","boostrap","App","isReady","setIsReady","isAuth","setIsAuth","err","console","log","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;;AAGA,SAASC,YAAT;AACA,SAASC,UAAT;AACA,SAASC,QAAT;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACIL,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,MACnBM,OADmB;AAAA,MACVC,UADU;;AAAA,mBAEEP,QAAQ,CAAC,IAAD,CAFV;AAAA;AAAA,MAEnBQ,MAFmB;AAAA,MAEXC,SAFW;;AAI1B,MAAI,CAACH,OAAL,EAAc;AACV,WACI,oBAAC,UAAD;AACI,MAAA,UAAU,EAAEF,QADhB;AAEI,MAAA,QAAQ,EAAE;AAAA,eAAMG,UAAU,CAAC,IAAD,CAAhB;AAAA,OAFd;AAGI,MAAA,OAAO,EAAE,iBAACG,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAED,MAAIF,MAAJ,EAAY;AACR;AACA,wBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAED,SAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;AAED,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { AppNavigator } from './src/navigation/AppNavigation';\nimport { MainScreen } from './src/screens/MainScreen';\nimport { boostrap } from './src/boostrap';\n\nexport default function App() {\n    const [isReady, setIsReady] = useState(false);\n    const [isAuth, setIsAuth] = useState(true);\n\n    if (!isReady) {\n        return (\n            <AppLoading\n                startAsync={boostrap}\n                onFinish={() => setIsReady(true)}\n                onError={(err) => console.log(err)}\n            />\n        );\n    }\n\n    if (isAuth) {\n        return;\n        <AppNavigator />;\n    }\n\n    return <MainScreen />;\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}